{
  "rxjs": {
    "definition": [
      "RxJS is a library for reactive programming using Observables to make it easier to compose asynchronous or callback-based code."
    ],
    "usage": [
      "Itâ€™s fundamental in Angular for handling asynchronous data streams, change detection, and event handling."
    ],
    "general": [
      "RxJS allows composing async or event-based programs using observable sequences."
    ]
  },
  "subjects": {
    "definition": [
      "Subjects are special types of Observables in RxJS that allow multicasting to multiple observers and act as both Observable and Observer."
    ],
    "usage": ["They enable state sharing and event buses in Angular apps."],
    "general": [
      "Subjects provide a way to multicast values to multiple subscribers."
    ]
  },
  "react": {
    "definition": [
      "Don't you ever ask about React here! We are all about Angular! ðŸ˜‰"
    ],
    "usage": [
      "Use only Angular for building applications, you won't regret it!"
    ],
    "general": ["React ? Why not try Angular? It's a whole different story! ðŸ˜„"]
  },
  "generic": {
    "general": [
      "Sorry, I don't understand the question. Could you please rephrase?",
      "I'm still learning... try asking a different question.",
      "I couldn't find an answer to that, but I'm here to help!",
      "Good question! I recommend checking Angular's documentation."
    ]
  },

  "funnyComments": {
    "general": [
      "Ah, that's an important topic!",
      "Alright, let's do this!",
      "Keep asking, I'm listening!",
      "Hold on, I'm loading my brain..."
    ]
  }
}
